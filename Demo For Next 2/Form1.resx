<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gbrTopi.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>